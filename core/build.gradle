apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion buildConfig.compileSdk
    defaultConfig {
        applicationId "com.github.mag0716.multiplemodulesample"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode buildConfig.versioncode
        versionName buildConfig.versionname
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    flavorDimensions "environment"
    productFlavors {
        prod {
            dimension "environment"
        }
        dev {
            dimension "environment"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    'coroutine_proguard-rules.pro',
                    '../api/proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    'coroutine_proguard-rules.pro',
                    '../api/proguard-rules.pro'
        }
    }
    dynamicFeatures = [":feature:list", ":feature:detail"]


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api(Libs.kotlin_stdlib_jdk7)
    api(Libs.kotlinx_coroutines_android)
    api(Libs.appcompat)
    api(Libs.material)
    api(Libs.constraintlayout)
    api(Libs.navigation_fragment_ktx)
    api(Libs.navigation_ui_ktx)
    api(Libs.lifecycle_extensions)
    api(Libs.lifecycle_viewmodel_ktx)
    api(Libs.lifecycle_viewmodel_savedstate)

    api(Libs.timber_android)

    // for multi module
    api project(":usecase")
    api project(":datasource:data")

    // for di
    implementation project(':datasource:repository')
    implementation project(":api:api")
    prodImplementation project(":api:apiprod")
    devImplementation project(":api:apidev")

    // for test
    testImplementation(Libs.junit)
    androidTestImplementation(Libs.espresso_core)
    androidTestImplementation(Libs.androidx_test_runner)
}
